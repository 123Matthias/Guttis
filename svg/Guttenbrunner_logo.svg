<?xml version="1.0" encoding="UTF-8"?>
<svg width="1050pt" height="825pt" preserveAspectRatio="xMidYMid" version="1.0" viewBox="0 0 1050 825" xml:space="preserve" xmlns="http://www.w3.org/2000/svg"><g transform="matrix(.1 0 0 -.1 -17.705 1162.8)"><g><path d="m8051.5 6736.2c-8051.5 3503.8-8051.5 3503.8 0 0z" fill="#198641"/><path d="m7196 6806c296-45 410-82 706-229 125-61 227-114 228-117 0-3-143-3-317 1-253 4-350 10-473 27-286 41-690 46-995 12-49-5-135-14-190-20-145-16-658-22-1133-14-458 7-486 13-267 53 66 12 188 37 270 56 83 19 202 44 265 55s153 29 200 40c121 28 649 116 815 136 339 41 624 41 891 0z" fill="#188c00"/><path d="m3116.6 6739.5c188.02-91.49 50.476-32.121 337.1-143.25 170.42-66.077 226.97-88.972 274.97-113.97-21.423-67.935-553.59 120.5-621.59 140.5-75 22-116.45 39.193-148.07 68.193-3 14-29.467 74.872-33.467 126.87l-5.4256 143.81 32.659-58.85c20.415-66.897 101.28-103.6 163.83-163.3z" fill="#178a00" stop-color="#000000" stroke-width="12.214" style="-inkscape-stroke:none;font-variation-settings:normal"/><path d="m3173 7226c203-101 302-135 509-175 442-86 871-63 1568 83 146 30 363 76 484 101 504 105 878 147 1126 127 356-29 657-119 902-270 89-55 371.95-297.56 408.95-337.56l-130.83 9.9459c-136.33 69.741-545.48 203.17-695.12 234.61-196 40-246 43-560 38-170-3-327-8-347-11-21-3-53-8-70-10-18-2-87-13-153-24-464.77-56.515-1416-306-2065-306-235-1-254 1-475 37l-230 37-201 99c-110 55-209 110-220 122-10 11-36 30-56 40-43 22-58 60-58 154 0 33-5 91-10 130-5 38-6 73-4 77 3 5 28-9 55-31 28-22 128-78 222-125z" fill="#188c00"/><path d="m8436 7580c59-29 101-72 115-120 19-61-7-135-67-190-80-73-155-89-229-47-52 29-75 75-75 151 0 105 54 181 152 211 57 18 55 18 104-5z" fill="#178a00"/><path d="m3251 7805c61-32 86-115 55-189-20-49-60-76-114-76-39 0-50 5-88 44-36 36-44 50-44 81 0 41 22 95 49 119 10 9 38 20 62 25s45 9 47 10 16-6 33-14z" fill="#f6d732"/><path d="m1936 8030c89-84 83-205-14-274-55-39-112-40-176-2-79 46-99 138-49 223 38 66 74 85 150 81 49-3 68-9 89-28z" fill="#ffd969"/><path d="m2214 9288c3-13 6-48 6-78s7-109 16-176c8-67 14-137 12-155-3-32-5-33-118-71-63-21-122-38-131-38-32 0-31 110 1 230 20 75 86 194 140 253 29 32 56 57 60 57s10-10 14-22z" fill="#050514"/><path d="m2729 9391 7.0019-143c10-195 9.002-192.99 67.002-188.99 44 2 46.992 0.9981 46.992-22.002 0-36-41-89.001-90-116-24-14-92.999-45.997-154-71.997-140-59-480.99-202-563.99-236-34-14-61.004-31.002-59.004-37.002s49.004-41.003 104-78.003c66-43 116.99-86.995 147.99-125 52-63 128-213.01 146-290.01 9-34 12.001-212 11.001-601l-0.9961-554-30-46.992c-42-66-61.011-124-61.011-191 0-48 7.0078-72.006 43.008-141.01l41.997-83.994 158-3.0029c87-1 165 2.002 175 7.002 10 4.9998 35.005 42.006 55.005 81.006 31 61 36.987 81.992 36.987 136.99 0 71-10.99 100-69.99 179-25 34-35.004 54.996-29.004 60.996 7 7 6.0038 199-0.996 555-12 586-9.001 651 33.999 773 39 114 51 137.01 165 320.01 131 210 148 259.99 132 376.99-5.9998 42-19.996 99.994-30.996 128.99-30 82-113 204-162 239-24 18-60.006 41.006-81.006 51.006zm-92.856-694.98c1.5528 0.1132 2.8526 0.1103 3.8526-0.015 17-1 120-197.01 120-227.01 0-11-7.9922-21.99-16.992-24.99-35-11-189.01-77.005-234.01-100l-45.996-22.998-18.999 41.997c-11 23-42.009 78.995-69.009 125-56 97-56.99 96.012 50.01 132.01 39 13 79 27.999 90 33.999 11 6 39.995 17.997 64.995 26.997 21.875 7.875 45.278 14.222 56.147 15.015zm-41.924-87.319c-2.9531-0.3281-4.2187-6.6914-4.2187-18.691 0-29 23.993-82.009 42.993-99.009 25-20 22.002 2.002-7.998 67.002-16.25 35-25.854 51.245-30.776 50.698zm-70.547-32.153c-3.0454-0.356-3.6767-5.417-3.6767-15.542 0-27 36.995-101 49.995-101 15 0 12.001 36.994-3.999 68.994-8 15-22 33.005-30 40.005-6.125 5.2498-9.9507 7.8208-12.319 7.5439zm-72.349-24.756c-6.8313 0.1357-9.8008-8.878-5.332-28.784 6-28 59.013-91.002 68.013-82.002 3 3-6.0137 27.997-19.014 56.997-15.438 33.844-33.683 53.591-43.667 53.789zm89.678-1721.8c123 0 201-125 140-224-51-81-150-103-215-45.996-18 17-41.01 48.009-50.01 69.009-14 35-13.996 44.989-0.9961 88.989 10 33 26.995 61.006 49.995 81.006 27 24 45.011 30.996 76.011 30.996z" fill="#010114"/><path d="m5024 9438-118.01-124c-65-69-203.99-204.01-308.99-302.01-106-97-300-283-432-413-132-129-272-264-312-300l-71.001-63.999 0.9961-500c1-325 4.9971-500.01 11.997-501.01 6 0 30.009-3.9981 54.009-7.9981 33-6 45.987-5.0049 51.987 4.9951 7 11 9.0088 9.9971 9.0088-3.0029 0-14 7.998-17.988 37.998-17.988 27 0 33.002 2.9906 22.002 9.9902-11 7-11.007 10.005-2.0069 10.005 7 0 10.998 3.9981 7.9981 7.9981-6 10 123.01 35.997 132.01 26.997 3-3-1.0127-4.9951-8.0127-4.9951-9 0-6.9938-7.0058 6.0058-21.006 17-19 26.008-21 88.008-15 38 4 102.99 15.001 143.99 26.001 42 11 87.001 20.01 101 20.01 83 0 347.99 52.999 473.99 93.999 75 25 186.01 53.995 245.01 64.995 94 17 278.99 78.001 351.99 116 14 8 77.01 37.994 140.01 68.994 164 79 279 144.01 346 197.01 33 25 74.007 54.003 92.007 63.003s40.991 30.992 50.991 46.992c10 17 28.005 37 40.005 45 11 8 20.991 22 20.991 30s7 14.004 15 14.004c10 0 15 10 15 30 0 33-13.989 38.993-28.989 12.993-10-17-10.001-16.996-11.001-0.9961 0 9-7.0069 21.001-17.007 26.001-21 12-24.002 51.007-7.0019 77.007 25 35 16.002 51.991-52.998 99.99-38 26-77.996 59.996-90.996 75.996-13 16-29.002 29.004-37.002 29.004-7 0-27.992 16.998-46.992 37.998-19 20-58.001 58.005-86.001 85.005-65 60-39.004 63.002 30.996 3.0029 29-24 62.992-49.001 76.992-56.001 28-15 106.01-100 103.01-112-2-4 1.9984-7.9981 7.998-7.9981 6 0 38.997-25.005 71.997-55.005 56-50 97.002-68.996 97.002-45.996 0 4.9996 11.005 12 25.005 15 14 3.9996 24.99 10 24.99 15 0 17-529.99 523-729.99 698-180 157-273 243-329 305-28 31-85.994 88.006-128.99 126.01zm-242.99-960.78c86.198 0.5586 201.61-6.9141 213.98-17.227 12-10 15-36.999 15-124 0-61-2.9912-135.01-5.9912-163.01l-7.002-52.998h-178.01c-208 0-184-17.998-194 146-6 102 4.0117 176 27.012 190 6 4 24.997 11 41.997 15 14.688 4.0625 47.831 5.9717 87.012 6.2256zm541.48-0.9815c6.4277-0.037 12.626-0.124 18.501-0.249 129-1 129.01-0.9986 129.01-188 0-145-1.002-149-22.002-157-13-4-93.004-11.004-179-14.004-155-6-156.99-5.9892-162.99 16.011-12 44-6.998 302 7.002 320 8 11 31.992 16.995 76.992 19.995 31.5 1.75 87.501 3.5117 132.5 3.2519zm-508.24-474.49c87.5 0.25 176.24-5.2579 185.74-16.758 17-21 10.002-319-7.9981-337-9-9-57.001-13.996-146-15.996-148-4-188 5.9943-206 53.994-11 28-13.999 273.01-3.999 298.01 4.5 11.5 90.757 17.504 178.26 17.754zm305.74-1.7579h160c92 0 170-3.9902 181-9.9902 17-10 18.999-22.005 18.999-145 0-73-3.9903-145-9.9902-160-17-44-58.002-52.992-217-46.992-134 4-142 6.001-147 26.001-10 36-7.0009 282.99 3.9991 309.99z" fill="#ee6120"/><path d="m7255 9428c57-29 84-56 111-113 76-161-40-336-220-334-149 1-259 98-259 229-1 46 6 67 38 124 42 75 62 89 165 112 65 15 110 10 165-18z" fill="#ffe700"/></g><path d="m5250 9465c7-8 17-15 23-15 20 0 96-65 92-78-3-7 0-10 5-7 6 4 36-14 68-39 155-124 186-148 215-163 18-9 55-38 82-65 50-49 153-108 186-108 40 0 52 43 57 200 3 97 9 150 16 153 6 2 78 2 160-1l148-5-6-381c-6-376-8-436-14-436-2 0-67 59-145 132-78 72-203 183-277 247s-146 126-160 137c-14 12-79 69-146 125-161 138-342 302-343 312-2 13 26 7 39-8z"/><path d="m3603 9459c26-17 58-44 72-60 26-31 55-115 55-158 0-70-94-180-172-201-77-21-200 21-253 87-25 32-30 49-33 105-4 56-1 73 17 100 11 18 21 29 21 23 0-15 40 53 40 68 0 18 40 54 65 60 11 3 47 5 81 6 52 1 67-3 107-30z" fill="#0baa00"/><path d="m5078 9615c41-18 82-52 82-70 0-6 9-19 21-28 11-10 18-21 15-24-3-4-19 5-34 18-15 14-53 45-85 68l-57 43-57-46c-31-26-140-127-242-224-359-343-418-398-590-557-95-88-176-165-180-172-14-25-300-309-328-325-18-10-34-14-43-8-11 7-9 16 12 47 39 57 774 793 843 843 101 74 230 187 338 295 117 117 143 136 201 146 63 10 64 10 104-6z"/><path d="m5125 9968c323-297 535-472 551-455 10 10 23 87 24 137v45l457-3 458-3 6-237c4-130 7-363 8-517l1-281 133-125c151-144 178-163 207-154 19 6 20 2 20-78 0-100 20-212 49-280 23-53 27-87 10-87-5 0-40 4-77 9s-121 12-187 15l-120 6v-173c0-94-3-184-7-199-8-25-12-27-79-30-52-2-73 1-76 10-10 24 3 522 13 532 6 6 66 7 172 2l162-7v55c-1 74-15 101-81 152-64 49-217 186-266 237l-33 35v946h-284c-156 0-298 3-315 6l-31 7-1-129c0-127-9-218-23-231-3-4-40 28-82 70-41 42-108 101-147 131-40 30-130 103-201 163-71 59-154 129-185 154-31 26-85 74-120 108-35 33-67 61-71 61-16 0-234-191-450-395-124-116-423-407-665-646-243-239-491-478-552-532-116-102-143-133-143-165 0-17 5-18 58-10 31 4 121 7 200 6 135-1 143-3 148-22 2-12 3-203 2-426-3-353-5-405-18-403-45 7-115 24-121 31-4 4-9 152-11 330-2 222-6 321-14 318-13-5-437 11-514 20-51 6-59 10-65 31-3 13-1 41 5 63 8 31 20 45 63 71 28 17 126 104 217 193 91 88 273 264 405 391 132 126 357 344 500 485 395 389 918 870 944 870 9 0 66-46 126-102z"/><g transform="matrix(-.81173 .69165 -.39793 -.46701 10280 8726.3)"><path transform="matrix(0 .24097 -.18914 0 2246.9 1851.5)" d="m278 7166c-83-31-123-75-188-211-62-129-84-221-84-355 0-142 22-207 88-268 80-74 171-107 482-177 254-58 268-62 2814-905 696-230 1299-426 1340-434s253-53 471-100c218-48 403-86 412-86 8 0 17 6 20 13 2 6 8 8 13 4s-27-111-70-238c-43-126-76-232-73-236 5-4 258-60 452-98l30-6 34 138c19 76 36 144 39 150 2 8 27-4 69-34 54-38 68-44 82-35 46 34 62 28 107-44 47-73 100-130 184-197 46-37 74-66 72-76-9-49-59-204-93-293-48-122-96-213-152-287-40-52-198-186-219-186-6 0-30 72-54 160-23 88-46 159-50 159-50-8-470-97-474-101s18-74 109-336l48-139-31-19c-17-10-34-19-37-19-4 0-18 18-32 40l-27 39-132-45c-73-25-284-97-468-159-289-98-410-146-880-350-1275-554-2028-879-2500-1080-461-196-508-215-699-272-467-139-623-218-686-348-25-50-27-63-21-124 18-194 131-429 254-528 156-125 242-114 617 77 292 149 362 179 1365 590 124 51 299 123 390 160 91 38 469 192 840 343 1524 621 1333 537 1825 803 242 130 443 240 448 244 4 3-5 39-19 78-15 40-25 74-23 76s63 27 134 56c260 106 510 235 645 334 30 22 121 104 201 182 212 204 299 258 546 338l113 36 132-29c1233-274 2428-515 2883-581 407-59 1258-50 1915 21 272 29 360 53 360 99 0 76-480 262-1239 480-188 54-2294 577-2339 581-10 0 119 46 388 137 129 44 316 108 415 142 175 60 358 123 790 270s1385 480 1515 530c266 100 374 165 368 219-4 31-33 47-173 93l-100 33-275-1c-285 0-417-8-830-49-516-52-944-118-1222-189-320-82-1348-385-2342-690-172-53-296-86-323-86-67 0-232 36-339 75-188 67-305 153-406 297-94 134-383 310-798 487l-95 40v101l-462 185-462 184-978 301c-538 166-1108 342-1268 391-159 50-420 131-580 181-657 204-862 272-990 330-210 94-390 167-480 193-110 32-243 42-297 21zm267-121c86-24 232-81 360-140 165-77 267-115 495-188 428-137 1224-384 2485-772 512-157 936-287 943-290 10-4 9-13-4-42-100-227-120-297-150-533-9-74-18-136-19-138-2-2-716 233-1586 522-2238 742-2218 735-2514 801-281 62-391 110-421 182-43 101-39 220 12 372 30 91 101 218 129 234 58 31 138 29 270-8zm4770-1565 400-179-1-103c-1-57-6-128-13-158-11-54-104-253-139-298l-17-22-230 49c-127 28-304 66-395 85-91 20-174 38-186 41-16 3-20 11-17 32 27 228 57 393 84 468 24 68 108 265 113 265 1 0 181-81 401-180zm7214-162c62-20 118-41 125-48 24-25-95-89-336-181-151-57-1032-365-1568-547-113-39-286-98-385-132-345-118-896-306-1352-461-161-54-427-144-590-200-164-56-507-171-763-256-277-92-490-168-526-188-98-55-179-120-329-265-77-75-162-152-190-171-79-57-234-145-352-200-118-56-410-179-423-179-4 0-15 30-24 66-21 82-53 147-122 245l-53 77 29 12c25 10 34 10 55-4 64-42 277 5 341 76 40 44 57 88 52 140l-5 49 77 59c146 111 207 187 286 355 48 104 110 283 144 422 22 88 25 93 54 102 17 5 331 101 697 215 1578 487 2637 797 2924 856 325 67 939 144 1440 180 231 17 256 17 475 15 205-2 205-2 319-37zm-6604-139c281-123 561-282 664-374 22-21 65-72 94-114 30-42 76-94 102-115 111-92 280-167 470-211 55-13 93-25 85-28s-172-54-365-113c-192-59-355-111-361-116-7-5-15-24-18-44l-7-35-32 23c-66 47-168 152-197 204-49 84-98 112-151 84-16-9-30-4-78 30-58 41-59 42-49 73 24 79-4 166-70 214-81 60-276 89-321 49-12-11-24-16-27-13-4 4 16 77 45 164 52 161 71 250 71 337 0 34 4 47 13 43 6-2 66-28 132-58zm-61-529c42-11 90-29 107-41 32-23 59-67 59-97 0-17-88-363-93-368-3-3-351 69-356 73-6 4 129 404 146 431s38 28 137 2zm3577-774c167-41 455-111 639-156 1287-313 1655-413 2161-586 283-97 509-196 509-224 0-23-267-60-610-85-576-41-1226-43-1528-5-352 45-1235 217-2356 460-357 77-652 140-654 140-20 0 67 31 554 195 459 156 975 332 980 334 1 1 138-32 305-73zm-3462-463c5-21 26-101 46-178 42-161 41-189-10-234-41-36-158-73-217-69l-41 3-75 218c-41 119-72 220-69 223 7 7 300 71 334 73 18 1 24-7 32-36zm-330-653c75-108 120-229 146-395l6-40-278-150c-152-83-321-174-375-203l-98-53-94 143c-115 174-153 250-199 393-58 184-58 171 10 191 32 9 222 65 423 125l365 107 28-31c15-18 45-57 66-87zm-979-232c48-183 95-285 221-481 86-133 88-138 66-146-12-5-157-64-322-131s-408-166-540-220c-756-308-884-360-1420-580-104-43-289-118-410-168-855-350-1e3 -413-1242-538s-319-156-393-157c-43-1-64 4-96 25-120 77-220 257-253 455-11 61-10 75 3 101 51 99 226 181 646 302 189 54 367 128 1975 823 245 106 1458 632 1630 708 61 26 113 48 117 48 4 1 12-18 18-41z"/><path transform="matrix(0 .24097 -.18914 0 2246.9 1851.5)" d="m7426 4161-108-6-118-152 7-93 6-93 59-68 60-69h220l118 102v242l-56 73c-31 40-61 72-68 71-6-1-60-4-120-7zm162-96 42-55v-204l-84-86h-194l-50 58c-48 56-49 59-54 135l-5 78 50 65 49 64h203z"/><path transform="matrix(7.5,0,0,-7.5,0,10240)" d="m281.18 1107.8c-1.6472-2.5183-2.8034-5.9655-5.7029-17.003-2.7958-10.643-10.473-34.026-30.758-93.678l-9.5219-28.001 3.3464-1.3582c1.8405-0.74701 5.4443-2.939 8.0084-4.8712 2.5641-1.9321 4.7328-3.4156 4.8193-3.2967 0.0865 0.11892 1.2553 3.6896 2.5973 7.935 14.561 46.062 34.865 108.32 37.935 116.33 2.119 5.5247 4.0665 11.189 4.3278 12.588 0.87522 4.6848-1.9465 8.59-8.2838 11.465-3.5411 1.6063-5.6691 1.5731-6.7671-0.1055z" fill="#145d0f" stroke-width=".59375"/><g fill="#000100"><path transform="matrix(7.5,0,0,-7.5,0,10240)" d="m130.88 1114.5c-2.7285-0.6531-7.9773-3.6748-8.6872-5.0012-1.2321-2.3022-0.13069-8.7226 3.2736-19.083 3.6765-11.188 6.9727-24.131 21.473-84.312 5.429-22.533 9.9782-41.294 10.109-41.692 0.16597-0.50383 1.4081-0.17566 4.0959 1.0821 2.1217 0.99288 6.012 2.2296 8.645 2.7484 3.8352 0.75557 4.7346 1.1308 4.5223 1.8866-0.73091 2.603-27.3 105.44-29.159 112.87-1.1861 4.7352-2.9084 12.49-3.8273 17.233-2.0998 10.838-2.8993 12.824-5.6179 13.96-2.268 0.9477-2.1939 0.9429-4.8272 0.3126z" stroke-width=".59375"/><path d="m1704.2 3241.1c3.0832 29.869-8.113 71.03-21.958 80.728-5.4084 3.7881-14.422 6.8873-20.03 6.8873-7.4433 0-14.266 6.3618-25.266 23.557-27.234 42.572-54.468 62.188-124.75 89.85l-35.28 13.886-37.085 153.44c-94.662 391.67-156.75 663.06-168.27 735.49-7.6723 48.24-22.502 192.33-29.008 281.86-9.0137 124.02-4.7529 251.26 8.9224 266.49 1.8546 2.0653 7.7785-7.9542 13.164-22.266 17.418-46.28 116.9-410.7 280.39-1027.1 36.567-137.88 70.637-261.6 75.709-274.94s24.468-45.301 43.1-71.018c18.632-25.717 42.51-64.793 53.062-86.836 16.739-34.969 55.461-139.23 55.461-149.33 0-1.9871-6.7219-5.8313-14.938-8.5427-8.2164-2.7116-23.063-11.884-32.993-20.384-9.9305-8.5-19.094-15.454-20.365-15.454-1.2707 0-1.2089 10.671 0.1369 23.713zm-164.52 360.68c13.358 12.626 14.473 15.848 14.473 41.814 0 21.624-2.3185 31.713-10.019 43.603-9.4449 14.581-11.439 15.471-34.752 15.523-22.346 0.052-26.157-1.4151-39.506-15.187-14.231-14.683-14.706-16.316-12.911-44.5 1.6435-25.814 3.5896-31.038 16.537-44.396 13.18-13.599 16.557-14.905 33.189-12.838 12.452 1.5475 23.256 6.781 32.989 15.981z" stroke-width="4.4531"/><path transform="matrix(7.5,0,0,-7.5,0,10240)" d="m206.57 848.23-6.2604-23.393 2.8728-15.052c10.847-56.834 15.75-79.307 20.456-93.768 1.6634-5.1107 2.2848-6.4083 2.6265-5.4845 1.291 3.49 2.0284 19.21 2.0278 43.232l-6.1e-4 25.531-1.9108 12.766c-3.209 21.439-12.866 79.562-13.219 79.562-0.18256 0-3.1491-10.527-6.5924-23.393z" stroke-width=".59375"/><path transform="matrix(7.5,0,0,-7.5,0,10240)" d="m176.05 934.25c-1.9594-0.77654-4.4151-1.4257-5.4572-1.4425-1.042-0.0168-2.0521-0.28539-2.2445-0.59677-0.45494-0.73611 4.5096-13.814 7.5614-19.918 1.3342-2.6688 3.8132-6.306 5.6578-8.3012 3.8213-4.1333 5.6376-7.7859 7.3788-14.839l1.2547-5.0824 2.6401 10.846c1.4531 5.9693 3.0315 11.158 3.5105 11.539 1.1625 0.92634 0.41612 2.2765-3.7848 6.846-2.7 2.9369-3.196 3.804-2.8851 5.043 0.55666 2.2179-1.0536 4.3393-3.2938 4.3393-0.99363 0-2.2913 0.25939-2.8837 0.57642-1.5817 0.84652-3.105 5.1678-3.1979 9.072-0.0447 1.8777-0.21907 3.3952-0.38754 3.3722-0.16848-0.023-1.9094-0.6772-3.8688-1.4537z" stroke-width=".59375"/></g><g fill="#0caf00"><path d="m2109.3 1936.7c-9.1092 13.903-20.065 47.258-43.304 131.84-13.546 49.302-276.57 845.27-296.73 897.97-1.0792 2.8212 5.5262 7.5905 14.71 10.622 9.1683 3.0257 35.432 18.222 58.364 33.771 26.829 18.19 42.416 26.311 43.717 22.777 1.1109-3.0209 37.277-115.71 80.369-250.41 87.191-272.57 165.78-512.16 219.93-670.47 40.459-118.29 40.961-123.77 13.797-150.71-33.581-33.305-77.605-45.604-90.856-25.381z" stroke-width="4.4531"/><path transform="matrix(7.5,0,0,-7.5,0,10240)" d="m127.93 1112.8c-4.9558-2.3445-5.6205-3.1394-5.6205-6.7218 0-3.3973 0.71805-6.3928 4.7428-19.785 3.5904-11.948 6.2718-22.554 19.576-77.434 5.8912-24.301 10.785-44.258 10.875-44.348 0.0898-0.0898 1.3592 0.37534 2.8209 1.0337 1.4616 0.65839 5.0299 1.8349 7.9295 2.6144 2.8996 0.77955 5.3812 1.5267 5.5148 1.6603 0.1336 0.13359-5.9337 24.124-13.483 53.311-13.74 53.122-16.883 65.699-19.84 79.392-1.8825 8.7152-2.4158 10.015-4.5652 11.127-2.3651 1.223-3.9194 1.0569-7.9496-0.8498z" stroke-width=".59375"/><path d="m1747.7 3004.8c-1.691 7.9599-11.972 52.547-22.847 99.082l-19.771 84.609 22.263 20.655c20.537 19.053 53.28 35.009 71.847 35.009 5.4673 0 17.3-23.282 44.322-87.206 31.039-73.428 35.891-88.109 30.713-92.92-35.434-32.921-101.42-73.702-119.25-73.702-2.3078 0-5.5806 6.5127-7.2715 14.473z" stroke-width="4.4531"/></g><g><path transform="matrix(7.5,0,0,-7.5,0,10240)" d="m170.16 965.7c-2.2582-0.44851-6.0849-1.7553-8.5038-2.904-3.9659-1.8834-4.3564-2.2206-3.9758-3.4334 0.23213-0.73967 2.2185-6.4214 4.4141-12.626l3.9921-11.281 2.5551-0.18738c1.9508-0.14306 3.4451 0.26435 6.318 1.7225 2.0696 1.0504 4.0823 2.2948 4.4728 2.7653 0.55699 0.67114 0.35367 3.0498-0.94395 11.043-2.2035 13.574-2.7104 15.838-3.5296 15.773-0.38114-0.0307-2.5406-0.42276-4.7988-0.87128z" fill="#0cad00" stroke-width=".59375"/><path transform="matrix(7.5,0,0,-7.5,0,10240)" d="m189.41 937.28c-1.7961-0.73419-4.167-1.8032-5.2687-2.3756-1.9096-0.99219-1.9868-1.1594-1.6545-3.5838 0.43518-3.1749 1.466-5.4924 2.6441-5.9445 0.86577-0.33223 8.2471 1.7716 9.1839 2.6176 0.39005 0.35223-0.94461 9.9382-1.4534 10.439-0.1022 0.1005-1.6553-0.41797-3.4514-1.1522z" fill="#050505" stroke-width=".59375"/><path d="m1603.8 3239.4c-8.0526 48.76-8.6502 47.225 22.477 57.737 38.973 13.161 47.339 12.369 54.431-5.1576 8.9444-22.106 11.64-46.729 5.6104-51.252-6.8418-5.1322-68.771-32.244-73.652-32.244-2.0688 0-6.0587 13.912-8.8664 30.916z" fill="#050505" stroke-width="4.4531"/></g></g></g><script id="mesh_polyfill" type="text/javascript">
!function(){const t="http://www.w3.org/2000/svg",e="http://www.w3.org/1999/xlink",s="http://www.w3.org/1999/xhtml",r=2;if(document.createElementNS(t,"meshgradient").x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case"translate":2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error("mesh.js: translate does not have 2 arguments!"),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case"scale":1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error("mesh.js: scale does not have 1 or 2 arguments!"),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case"rotate":if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error("math.js: No argument to rotate transform!");3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case"skewX":l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error("math.js: No argument to skewX transform!");break;case"skewY":l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error("math.js: No argument to skewY transform!");break;case"matrix":6===l.length?h=h.append(new g(...l)):console.error("math.js: Incorrect number of arguments for matrix!");break;default:console.error("mesh.js: Unhandled transform type: "+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error("mesh.js: argument to Affine.append is not affine!");let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute("type")||"bilinear"}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute("x")),n=Number(t.getAttribute("y"));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute("path"),c="l";null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case"l":0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case"L":0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case"c":0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case"C":0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error("mesh.js: "+c+" invalid path type.")}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if("bilinear"===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll("rect,circle,ellipse,path,text").forEach((r,n)=&gt;{let o=r.getAttribute("id");o||(o="patchjs_shape"+n,r.setAttribute("id",o));const i=r.style.fill.match(/^url\(\s*"?\s*#([^\s"]+)"?\s*\)/),a=r.style.stroke.match(/^url\(\s*"?\s*#([^\s"]+)"?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;"meshgradient"===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,"canvas");d(l,{width:i.width,height:i.height});const c=l.getContext("2d");let u=c.createImageData(i.width,i.height);const f=new b(a);"objectBoundingBox"===a.getAttribute("gradientUnits")&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute("gradientTransform");null!=p&amp;&amp;f.transform(h(p)),"userSpaceOnUse"===a.getAttribute("gradientUnits")&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,"image");d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,"xlink:href",g),r.parentNode.insertBefore(y,r),r.style.fill="none";const w=document.createElementNS(t,"use");w.setAttributeNS(e,"xlink:href","#"+o);const m="patchjs_clip"+n,M=document.createElementNS(t,"clipPath");M.setAttribute("id",m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute("clip-path","url(#"+m+")"),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;"meshgradient"===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute("stroke-miterlimit"))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,"canvas");d(p,{width:l,height:c});const y=p.getContext("2d");let g=y.createImageData(l,c);const w=new b(o);"objectBoundingBox"===o.getAttribute("gradientUnits")&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute("gradientTransform");null!=m&amp;&amp;w.transform(h(m)),"userSpaceOnUse"===o.getAttribute("gradientUnits")&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,"image");d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,"xlink:href",S);const k="pattern_clip"+n,A=document.createElementNS(t,"pattern");d(A,{id:k,patternUnits:"userSpaceOnUse",width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke="url(#"+k+")",g=null,p=null,S=null}}})}();
</script><g transform="translate(-54.697 -19.251)"><path d="m222.04 706.09c-3.6162-0.56156-4.1454-1.6841-5.1606-10.947-0.76528-6.9824-1.2776-9.0591-2.3105-9.3662-1.803-0.53619-7.0994 2.1591-7.7834 3.9609-0.30441 0.80189 0.14474 4.2548 0.9981 7.673 1.4747 5.9073 1.4623 6.3138-0.25183 8.2076-1.3832 1.5283-3.2557 2.1517-8.0366 2.6757-7.1573 0.78444-9.6291-0.23624-11.548-4.7684-2.3871-5.6385-5.9724-21.775-7.087-31.897-1.4452-13.121-1.0463-19.933 1.3338-22.795 2.0459-2.4601 10.422-5.7524 14.483-5.6924l2.625 0.0388 1.1712 10.686c1.3528 12.342 2.4009 14.222 7.0082 12.563 3.901-1.4039 4.3883-3.8598 2.6662-13.437-1.4142-7.8645-1.399-8.3608 0.30619-9.9946 3.5763-3.4266 14.523-2.475 18.359 1.5959 2.5616 2.7182 5.8804 18.798 7.3393 35.559 1.8944 21.764 0.83973 25.124-8.1203 25.867-2.3103 0.19174-5.0064 0.22329-5.9914 0.0703zm23.369-3.4662c-1.4485-1.2759-1.7536-2.6615-2.0325-9.2281-0.55119-12.979 3.6307-36.738 7.2341-41.1 1.5816-1.9148 12.123-5.2487 14.428-4.5632 5.3078 1.5785 17.37 26.41 20.544 42.293 1.4522 7.2666 1.1029 7.7122-6.7338 8.5916-7.5498 0.84718-9.7055-0.43507-10.331-6.1449-0.43801-3.9964-0.60138-4.2217-2.88-3.972-4.1792 0.45805-6.019 3.0856-5.4967 7.8507 0.43813 3.9974 0.32989 4.2304-2.3146 4.9814-9.3627 2.6588-10.706 2.7985-12.417 1.2914zm19.97-25.7c0.78209-1.0013-2.8728-7.5934-4.3956-7.9282-1.1648-0.25607-2.4218 4.9167-2.0404 8.3966 0.23155 2.1126 0.49729 2.2322 3.009 1.3545 1.5153-0.52953 3.0574-1.3498 3.4269-1.8229zm114.08 11.92c-3.123-0.47227-6.1149-3.5924-6.4595-6.7364-0.5326-4.8594-0.43139-27.123 0.15718-34.579 0.30251-3.8323 1.0113-7.6 1.575-8.3727 0.56375-0.77268 3.5869-2.1662 6.7181-3.0968 7.7407-2.3004 7.6756-2.3595 16.798 15.23l1.8941 3.6523 1.0266-8.3147c1.6024-12.979 1.8355-13.312 9.5716-13.687 4.8005-0.23231 7.8054 1.086 9.571 4.1991 4.0518 7.1441 10.723 30.756 10.365 36.685-0.29894 4.9507-3.2422 7.8544-9.091 8.969-3.0231 0.57608-5.3244 0.58255-5.7316 0.0145-0.37421-0.52144-0.58895-3.6943-0.4772-7.0508 0.2171-6.5201-1.6786-16.352-3.4544-17.916-1.3774-1.2133-2.1566 3.975-2.2335 14.871-0.0753 10.667-1.3903 12.166-9.3562 10.663-3.1559-0.59532-3.2834-0.77461-4.9314-6.9326-2.487-9.2937-4.1639-13.288-5.5163-13.14-1.7537 0.19221-1.5474 9.0467 0.38112 16.363 1.4128 5.3596 1.4458 6.2596 0.2724 7.4486-1.2972 1.3146-7.4608 2.2769-11.079 1.7297zm-77.047 6.1166c-7.0863-2.8966-12.195-10.933-14.578-22.933-1.5549-7.8287-1.3181-18.168 0.47868-20.905 0.71015-1.0818 3.8976-3.1641 7.0833-4.6275 8.3454-3.8336 8.5776-3.5261 8.9114 11.802 0.21456 9.8533 0.57152 12.839 2.0392 17.056 1.4142 4.0636 2.136 5.0732 3.5186 4.9217 1.2983-0.14229 1.9343-1.3133 2.5076-4.6172 0.65063-3.7495 0.42885-5.9391-1.45-14.316-3.2921-14.677-3.2777-14.232-0.53209-16.467 1.3356-1.0871 4.0306-2.442 5.9888-3.0108 3.0794-0.89454 3.8897-0.74425 5.9975 1.1125 3.6375 3.2042 5.3289 8.7978 5.9962 19.83 0.69807 11.54-0.44449 18.471-3.9902 24.206-4.9313 7.9763-13.934 11.232-21.971 7.947zm43.775-4.2208c-4.8333-1.3708-10.287-5.3864-11.725-8.6336-1.5797-3.5658-0.24702-8.2587 3.1608-11.131l2.6643-2.2452 3.9862 4.0218c4.3111 4.3495 7.3019 4.6774 7.3811 0.80927 0.0347-1.6947-0.88499-2.5092-4.5943-4.0684-12.301-5.1709-16.393-12.912-12.164-23.013 3.9787-9.5026 20.366-11.709 27.548-3.7083 2.9009 3.2315 3.0198 6.4352 0.37356 10.062-2.8172 3.8613-6.1793 4.3845-8.8754 1.381-2.3381-2.6046-5.4141-2.6486-5.1319-0.0734 0.12527 1.143 1.8877 2.5126 5.0512 3.9253 10.775 4.8116 13.881 8.1793 14.729 15.965 0.9684 8.8907-4.0386 15.176-13.392 16.813-3.3466 0.58551-6.7144 0.54618-9.0112-0.10526zm92.714-10.374c-3.1043-2.2333-6.3229-18.792-6.6913-34.425-0.36614-15.538-0.35603-15.552 12.402-17.437 13.536-1.9996 17.132-0.32004 17.426 8.1386l0.13158 3.7804-7.6204 1.1147c-5.8955 0.86234-7.7002 1.4594-7.973 2.6374-0.64825 2.7997 1.9805 3.8987 6.3286 2.6457 5.4094-1.5589 6.8058-0.72601 7.367 4.3939 0.72114 6.5796 0.32566 7.2306-4.7401 7.8026-5.2056 0.58774-6.8465 1.7019-6.1084 4.1477 0.44024 1.4588 1.2452 1.6491 4.7526 1.1238 2.3224-0.3478 5.8546-1.536 7.8493-2.6405 5.3226-2.9471 6.1754-2.337 6.9787 4.9922 0.5901 5.384 0.44142 6.42-1.1229 7.824-5.421 4.8653-24.905 8.8329-28.98 5.9013zm37.439-3.2742c-1.0763-0.63118-1.8215-4.0084-3.3892-15.36-3.4631-25.074-3.6617-28.142-2.0222-31.225 1.7143-3.224 7.2862-6.0079 12.362-6.1763l3.508-0.11642 0.51163 8.6286c0.76353 12.877 2.8608 30.986 4.1078 35.468 0.99462 3.5751 0.90755 4.1266-0.90929 5.7594-2.3454 2.1078-12.159 4.2005-14.169 3.0216zm32.004-3.9216c-7.653-2.2018-12.947-6.6428-13.456-11.288-0.28196-2.5726 1.9265-7.024 4.5427-9.1564 2.7135-2.2117 2.2643-2.4508 7.4735 3.9787 2.0636 2.547 5.7079 2.6837 6.2747 0.23542 0.51884-2.2408 0.10778-2.5992-7.2442-6.3166-7.7174-3.9021-10.417-7.1582-11.105-13.396-0.60009-5.4385 1.5006-10.275 5.9922-13.796 6.6603-5.2209 19.155-3.9865 23.638 2.3353 2.6381 3.7207 2.63 4.4863-0.0928 8.7708-2.8429 4.4736-6.0238 5.1613-9.3689 2.0254-2.5569-2.397-5.5666-2.6049-5.3214-0.36754 0.0871 0.79434 1.5205 2.1277 3.1853 2.9629 1.6649 0.83525 5.2386 2.6954 7.9415 4.1336 14.626 7.7826 11.911 26.785-4.2706 29.885-2.8983 0.55523-6.2439 0.55231-8.1885-7e-3zm72.588-7.6577c-1.3251-0.41955-2.3722-1.8329-3.099-4.1828-1.6953-5.4813-5.0862-39.343-4.2528-42.468 0.94896-3.5582 4.8857-5.165 15.529-6.3383 7.6008-0.83808 8.6891-0.73432 11.054 1.0521 2.1676 1.6373 2.7231 2.7917 3.198 6.6455l0.57467 4.664-7.7754 1.3347c-7.1056 1.2197-7.7789 1.5115-7.8169 3.3876-0.0537 2.6501 1.5681 3.0758 6.1651 1.6183 2.0413-0.64719 4.2548-1.0151 4.9188-0.81764 1.7594 0.52323 2.8982 4.5311 2.4398 8.587-0.39295 3.4766-0.47568 3.5457-5.4764 4.5689-3.6098 0.73865-5.3008 1.5595-5.85 2.8398-1.7434 4.0638 4.2039 3.8793 12.994-0.40294 3.9075-1.9037 4.1757-1.9201 5.5339-0.33805 2.0164 2.3487 2.2983 11.562 0.41141 13.447-3.7361 3.7325-23.197 8.0971-28.548 6.4027zm36.109-5.5207c-1.0112-1.721-2.1334-7.0364-3.316-15.707-1.842-13.504-1.9188-23.773-0.21495-28.722 2.1887-6.3573 18.829-10.509 26.879-6.7058 5.2826 2.4956 7.8139 5.5594 8.9458 10.828 1.1365 5.2901 0.2148 10.503-2.6559 15.02l-2.2141 3.4841 1.9504 1.7181c1.0727 0.94496 2.7559 3.0642 3.7404 4.7094 0.98448 1.6452 2.6678 3.5994 3.7408 4.3427 1.1718 0.8117 1.8059 1.9772 1.588 2.9185-0.58839 2.5413-6.5451 6.1918-10.878 6.6667l-3.9698 0.43509-3.5108-6.1288c-2.6048-4.5472-3.9596-6.0796-5.2502-5.9381-1.5581 0.17077-1.6542 0.73469-0.92152 5.4083 0.98809 6.3032-0.13916 7.6848-7.5472 9.2503-4.6524 0.98313-4.896 0.92271-6.3659-1.5791zm15.261-30.645c2.923-3.6133-0.21336-9.1663-3.7082-6.5655-2 1.4884-1.2869 8.71 0.83706 8.4772 0.79946-0.0876 2.0915-0.94787 2.8711-1.9117zm38.683 25.998c-7.653-2.2018-12.947-6.6428-13.456-11.288-0.28196-2.5726 1.9265-7.024 4.5427-9.1564 2.7135-2.2117 2.2643-2.4508 7.4735 3.9787 2.0636 2.547 5.7079 2.6837 6.2747 0.23541 0.51884-2.2408 0.10778-2.5992-7.2442-6.3165-7.7174-3.9021-10.417-7.1582-11.105-13.396-0.59909-5.4386 1.5006-10.275 5.9922-13.796 6.6603-5.2209 19.155-3.9865 23.638 2.3353 2.6381 3.7207 2.63 4.4863-0.0928 8.7708-2.8429 4.4736-6.0239 5.1613-9.3689 2.0254-2.5569-2.397-5.5666-2.6049-5.3214-0.36754 0.0871 0.79434 1.5205 2.1277 3.1853 2.9629 1.6649 0.83525 5.2386 2.6954 7.9415 4.1336 14.626 7.7826 11.911 26.785-4.2706 29.885-2.8983 0.55522-6.244 0.55231-8.1885-7e-3zm30.576-3.7665c-3.1043-2.2333-6.3229-18.792-6.6913-34.425-0.36614-15.538-0.35603-15.552 12.402-17.437 13.536-1.9996 17.132-0.32004 17.426 8.1386l0.13157 3.7804-7.6204 1.1147c-5.8954 0.86235-7.7002 1.4594-7.973 2.6374-0.64825 2.7997 1.9806 3.8987 6.3286 2.6457 5.4093-1.5589 6.8058-0.72601 7.367 4.3939 0.72113 6.5796 0.32565 7.2306-4.7402 7.8026-5.2056 0.58774-6.8464 1.7019-6.1084 4.1477 0.44024 1.4588 1.2452 1.6491 4.7526 1.1238 2.3224-0.3478 5.8546-1.536 7.8493-2.6405 5.3226-2.9471 6.1754-2.337 6.9787 4.9922 0.5901 5.384 0.44141 6.4201-1.1229 7.824-5.421 4.8653-24.905 8.8329-28.98 5.9013zm37.46-3.732c-3.6673-3.8807-6.8874-31.141-4.9221-41.669 0.89233-4.7798 1.4053-5.6043 5.081-8.167 3.3364-2.326 5.3687-2.9894 11.047-3.606 12.57-1.3648 19.283 3.278 20.476 14.162 0.64987 5.9294-1.4396 13.281-4.213 14.823-1.2319 0.68485-1.1012 1.0569 1.0993 3.1287 1.3736 1.2933 3.2797 3.6554 4.2358 5.2491 0.95608 1.5937 2.4078 3.2138 3.226 3.6001 4.0437 1.9094-0.71454 8.0178-7.3735 9.4658-5.0271 1.0932-7.5151-0.2018-8.9229-4.6442-1.0634-3.3556-4.447-7.1776-6.1857-6.987-1.0699 0.11726-1.1517 1.199-0.42313 5.5949 0.89495 5.3997 0.87702 5.4679-1.9582 7.4504-3.4099 2.3844-9.5886 3.2691-11.167 1.599zm15.299-32.641c2.0809-4.543-1.202-8.363-4.4844-5.218-1.6247 1.5567-1.907 6.2019-0.45468 7.4812 1.3984 1.2318 3.8535 0.10683 4.9391-2.2632zm38.76 26.164c-7.4129-3.8602-18.836-32.181-16.077-39.859 1.3234-3.683 11.428-9.585 15.004-8.7639 1.7341 0.39818 1.843 0.95458 2.6421 13.5 1.0858 17.049 3.3566 22.411 6.2112 14.667 0.97829-2.6539 0.9519-5.4509-0.14037-14.88l-1.3451-11.612 4.1338-2.4593c2.2736-1.3526 5.5533-2.8717 7.2883-3.3756 6.087-1.7682 7.9938 4.1767 6.7053 20.905-0.88718 11.517-3.2727 21.912-5.9253 25.818-2.0915 3.08-8.9832 6.8886-13.311 7.3559-1.229 0.13168-3.5623-0.45027-5.1854-1.2955zm35.503-2.8832c-1.0763-0.63117-1.8215-4.0084-3.3892-15.36-3.4631-25.074-3.6617-28.142-2.0222-31.225 1.7143-3.224 7.2862-6.0079 12.362-6.1763l3.508-0.11641 0.51163 8.6286c0.76354 12.877 2.8608 30.986 4.1078 35.468 0.99462 3.5751 0.90753 4.1266-0.9093 5.7594-2.3454 2.1078-12.159 4.2005-14.169 3.0216zm35.62-3.946c-9.6642-2.0874-15.905-9.2103-17.876-20.403-1.4693-8.3422-0.22556-14.789 4.1471-21.497 9.6426-14.792 32.244-13.926 33.927 1.2988 0.5402 4.8829-1.1397 8.1204-5.4503 10.507-4.0661 2.2514-5.5054 1.9343-5.8589-1.2907-0.37774-3.4465-3.4897-6.3217-5.7028-5.2689-2.6702 1.2702-3.9125 5.8775-3.2398 12.015 0.51057 4.6584 0.96309 5.6954 3.4358 7.8736 3.583 3.1562 5.1795 2.9693 9.9208-1.1616 2.0904-1.8213 4.165-3.3514 4.61-3.4002 0.44509-0.0488 2.3387 1.0914 4.208 2.5337 4.6425 3.5821 4.9657 6.9084 1.0943 11.263-1.592 1.7905-4.5777 4.1034-6.6349 5.1398-3.8994 1.9645-12.686 3.231-16.58 2.3899zm35.053-3.9155c-1.3251-0.41954-2.3722-1.8329-3.099-4.1828-1.6953-5.4813-5.0862-39.343-4.2528-42.468 0.94895-3.5582 4.8857-5.165 15.529-6.3383 7.6007-0.83808 8.6891-0.73432 11.054 1.0521 2.1675 1.6373 2.7231 2.7917 3.1979 6.6455l0.57467 4.664-7.7754 1.3347c-7.1056 1.2197-7.7789 1.5115-7.817 3.3876-0.0537 2.6501 1.5681 3.0758 6.1651 1.6183 2.0413-0.64719 4.2548-1.0151 4.9188-0.81763 1.7594 0.52322 2.8982 4.5311 2.4398 8.587-0.39295 3.4766-0.47568 3.5456-5.4764 4.5689-3.6098 0.73864-5.3008 1.5595-5.85 2.8398-1.7434 4.0638 4.2039 3.8793 12.994-0.40294 3.9075-1.9037 4.1757-1.92 5.5339-0.33805 2.0164 2.3487 2.2983 11.562 0.41142 13.447-3.7362 3.7325-23.197 8.0971-28.548 6.4027zm-351.42 36.893c-1.3421-1.1822-1.6657-2.5394-1.7378-7.288-0.19797-13.051-0.9401-22.205-1.8985-23.419-0.84903-1.075-1.7341-1.0003-5.8236 0.4914-4.2239 1.5407-5.0144 1.5898-6.3697 0.39598-1.3366-1.1774-1.5074-2.2344-1.2539-7.7625 0.44088-9.6145 1.2589-10.418 10.908-10.709 5.0947-0.15368 9.7674-0.86521 13.032-1.9845 9.5309-3.2674 10.324-3.3767 11.257-1.5508 4.0386 7.9038 2.9472 16.27-2.2107 16.947-0.78228 0.10264-2.242 1.0922-3.2438 2.199-1.818 2.0086-1.8172 2.0321 0.38198 12.261 1.2119 5.637 2.5967 11.766 3.0774 13.62 0.8126 3.1346 0.67294 3.5054-1.9902 5.2842-3.8517 2.5726-11.942 3.4396-14.128 1.514z" stroke-width="1.2215"/><path d="m936.28 634.91c1.8296 1.1875 5.6674 19.825 3.2634 21.943l-0.80034 10.283-180.58 21.269c-90.88 9.5569-207.42 21.458-214.41 20.424-6.6948-1.5394-15.176-18.156-16.458-22.696-3.0772-7.609 44.654-1.5482 212.87-20.436 98.212-10.911 194.2-32.434 196.12-30.788z"/><path d="m293.33 624.64c-12.161-3.372-19.712-20.641-17.392-39.774 1.7737-14.627 9.5194-23.94 20.953-25.194 10.828-1.1868 19.749 6.5581 18.099 15.714-0.49721 2.76-6.7844 9.3868-9.1519 9.6463-1.2403 0.13594-2.474-0.69737-3.1628-2.1365-2.0039-4.1862-4.203-4.8026-6.0891-1.7068-2.2034 3.6165-1.5486 16.186 1.1584 22.239 2.1424 4.7903 5.8629 7.0142 7.6686 4.5839 1.754-2.3608 1.0468-5.3631-1.7021-7.2264-5.3101-3.5993-1.3253-10.395 7.3531-12.541 4.0328-0.99698 4.9454-0.84269 6.8718 1.1618 1.9728 2.0528 2.2862 3.233 2.8013 10.549 0.73381 10.423-1.378 16.472-7.487 21.446-4.8242 3.9281-12.772 5.2199-19.92 3.2378zm45.122-5.1849c-4.5942-2.1768-6.5116-4.3611-9.5733-10.906-3.1081-6.644-5.0548-17.485-4.6414-25.846 0.29856-6.0381 0.61561-6.8748 3.5212-9.2932 1.7562-1.4617 4.6424-2.9284 6.4138-3.2595l3.2208-0.60187 1.313 14.744c1.3603 15.275 2.7772 20.883 5.209 20.616 2.3281-0.25516 2.6596-5.9156 0.94522-16.137-0.8818-5.2574-2.0048-11.144-2.4954-13.081-0.73739-2.9113-0.54895-3.886 1.086-5.6173 1.088-1.1522 3.6172-2.377 5.6203-2.7219 3.0876-0.53165 3.9796-0.17091 5.8596 2.3699 1.9723 2.6656 2.3776 4.4576 3.6651 16.204 1.3402 12.228 1.3168 13.714-0.31601 20.044-3.0239 11.723-11.451 17.454-19.828 13.485zm99.184-9.7341c-0.99168-0.69915-1.9405-5.933-4.0015-22.073-2.2638-17.728-2.5314-21.611-1.651-23.963 1.2358-3.3006 6.0454-6.0848 10.409-6.0254l3.0922 0.0421 0.49437 8.5352c0.72033 12.436 2.8158 30.613 4.0083 34.77 0.8722 3.0404 0.744 3.9084-0.82209 5.5668-2.2452 2.3776-9.7248 4.4194-11.529 3.1473zm-61.235 4.9518c-0.81215-1.0085-1.4714-5.9055-2.211-16.424l-1.0538-14.987-11.094 1.9098-0.46801-6.129c-0.80819-10.584-0.17546-11.272 12.208-13.279 5.8546-0.94882 11.819-2.2068 13.255-2.7954 2.3318-0.95631 2.7628-0.72578 4.0464 2.1639 0.79018 1.7788 1.5284 5.2231 1.6405 7.6539 0.18659 4.0457-0.13203 4.6825-3.7658 7.5262l-3.9697 3.1065 1.553 9.1834c0.85416 5.0509 2.0508 11.469 2.6591 14.263 1.0266 4.7144 0.95072 5.1958-1.057 6.701-2.9522 2.2133-10.294 2.906-11.742 1.1078zm34.457-3.9148c-1.3862-1.4424-1.6874-2.8344-1.66-7.6713 0.0184-3.25-0.38518-9.7285-0.8968-14.397l-0.93023-8.4874-10.46 1.1465-0.61376-6.5465c-0.93626-9.9868 0.0545-11.143 10.528-12.291 4.6835-0.51332 10.469-1.7602 12.858-2.7708 4.8876-2.0682 5.5321-1.6356 7.2344 4.8558 1.6341 6.2311 0.8373 9.2515-3.1952 12.112l-3.6578 2.5946 0.78992 7.2072c0.43445 3.964 1.5612 10.076 2.5038 13.582 2.205 8.2013 1.3297 9.9328-5.7577 11.39-3.9465 0.8115-5.418 0.65338-6.7418-0.72409z" stroke-width="1.3322"/><path d="m488.69 604.16c-6.8029 0.23562-12.551-3.7777-12.221-8.532 0.16702-2.4019 2.7977-7.7636 4.0481-8.2505 0.33591-0.13078 1.6922 0.86842 3.0141 2.2205 2.8759 2.9416 4.985 3.2409 6.0716 0.86144 1.0763-2.3566 0.0131-3.2212-5.0646-4.1185-5.9655-1.0541-9.5626-3.916-10.699-8.5118-1.7958-7.2658 1.9918-14.576 8.9576-17.288 9.1064-3.5457 16.734 2.2749 12.725 9.7105-2.0365 3.777-3.5008 4.2654-6.9233 2.309-2.0439-1.1684-2.9623-1.2373-3.4105-0.25608-0.88286 1.9331 0.38587 2.8424 5.1375 3.682 10.539 1.8623 15.59 10.208 11.543 19.07-2.4106 5.2782-7.6717 8.9124-13.178 9.1031zm-35.779-38.029c-2.3173-3.1022-0.69728-18.742-2.5812-24.408 5.098 2.0906 15.815 10.738 17.055 12.506 1.1786 1.6803 1.2656 10.217 1.0913 15.881-0.0906 2.9427-4.5934 28.489-4.2632 18.386 0.0563-1.7222 1.7232-15.545-1.0598-17.132-2.802-1.597-8.769-5.603-10.242-5.2347z" stroke-width="1.176"/></g></svg>
