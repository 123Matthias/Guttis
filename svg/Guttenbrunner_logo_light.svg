<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg
   version="1.0"
   width="512pt"
   height="512pt"
   viewBox="0 0 512 512"
   preserveAspectRatio="xMidYMid"
   id="svg154"
   sodipodi:docname="Guttenbrunner_logo_light.svg"
   inkscape:version="1.4 (e7c3feb1, 2024-10-09)"
   xml:space="preserve"
   inkscape:export-filename="Guttenbrunner_shirt.png"
   inkscape:export-xdpi="96"
   inkscape:export-ydpi="96"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg"><defs
     id="defs154"><linearGradient
       id="swatch450"
       inkscape:swatch="solid"><stop
         style="stop-color:#3e318b;stop-opacity:0.79136693;"
         offset="0"
         id="stop451" /></linearGradient><pattern
       id="EMFhbasepattern"
       patternUnits="userSpaceOnUse"
       width="6"
       height="6"
       x="0"
       y="0" /><clipPath
       clipPathUnits="userSpaceOnUse"
       id="clipEmfPath1"><path
         d="M 0,0 H 604.79669 V 86.719525 H 0 Z"
         id="path1-6" /></clipPath><pattern
       id="EMFhbasepattern-4"
       patternUnits="userSpaceOnUse"
       width="6"
       height="6"
       x="0"
       y="0" /></defs><sodipodi:namedview
     id="namedview154"
     pagecolor="#ffffff"
     bordercolor="#000000"
     borderopacity="0.25"
     inkscape:showpageshadow="2"
     inkscape:pageopacity="0.0"
     inkscape:pagecheckerboard="0"
     inkscape:deskcolor="#d1d1d1"
     inkscape:document-units="pt"
     inkscape:zoom="1.0180694"
     inkscape:cx="154.21345"
     inkscape:cy="386.02476"
     inkscape:window-width="1920"
     inkscape:window-height="1027"
     inkscape:window-x="0"
     inkscape:window-y="25"
     inkscape:window-maximized="1"
     inkscape:current-layer="g1"
     showgrid="false"
     inkscape:export-bgcolor="#ffffffff" /><g
     id="g7"
     transform="matrix(0.1,0,0,-0.1,-67.579878,1246.4812)"
     style="fill:#000000;stroke:none"><g
       id="g1"
       transform="translate(-2226.5601,1709.9981)"><g
         id="g2"
         transform="matrix(1.0546091,0,0,1.0546091,4655.7127,-4721.4225)"><path
           d="m 2269.0933,10911.155 c 250.1202,-45 346.4503,-82 596.5705,-229 105.6251,-61 191.8152,-114 192.6602,-117 0,-3 -120.8351,-3 -267.8653,1 -213.7851,4 -295.7502,10 -399.6853,27 -241.6702,41 -583.0505,46 -840.7757,12 -41.4051,-5 -114.0751,-14 -160.5502,-20 -122.5251,-16 -556.01054,-22 -957.38584,-14 -387.010398,7 -410.670398,13 -225.6152,53 55.77,12 158.8601,37 228.1502,56 70.135,19 170.6901,44 223.9252,55 53.235,11 129.2851,29 169.0001,40 102.2451,28 548.40554,116 688.67564,136 286.4553,41 527.2805,41 752.8957,0 z"
           id="path174"
           style="fill:#188c00;fill-opacity:1;stroke-width:0.919239" /><path
           d="m -1411.3963,10844.688 c 188.0236,-91.491 50.4758,-32.121 337.0972,-143.254 170.41886,-66.077 226.96646,-88.972 274.96646,-113.972 -21.4231,-67.935 -553.59136,120.5 -621.59136,140.5 -75,22 -116.449,39.193 -148.0652,68.193 -3,14 -29.4674,74.872 -33.4674,126.872 l -5.4256,143.807 32.6593,-58.85 c 20.4152,-66.897 101.2845,-103.595 163.8266,-163.296 z"
           id="path173"
           style="font-variation-settings:normal;vector-effect:none;fill:#178a00;fill-opacity:1;stroke-width:12.2139;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;-inkscape-stroke:none;stop-color:#000000"
           sodipodi:nodetypes="csccccccc" /><path
           d="m -1378.7432,11331.155 c 185.6522,-101 276.1921,-135 465.50246,-175 404.2282,-86 796.5673,-63 1434.0041,83 133.5233,30 331.9792,76 442.6389,101 460.92994,105 802.96924,147 1029.77594,127 325.5774,-29 600.855,-119 824.9181,-270 81.3943,-55 340.1673,-297.56 374.0054,-337.56 l -119.6532,9.946 c -124.6771,69.741 -498.8621,203.167 -635.7167,234.614 -179.2506,40 -224.9777,43 -512.1443,38 -155.4724,-3 -299.0558,-8 -317.3466,-11 -19.2054,-3 -48.4708,-8 -64.018,-10 -16.4618,-2 -79.5653,-13 -139.9252,-24 -425.05364,-56.515 -1294.99794,-306 -1888.53214,-306 -214.9177,-1 -232.294,1 -434.4081,37 l -210.34486,37 -183.8232,99 c -100.5998,55 -191.1396,110 -201.1996,122 -9.1454,11 -32.9236,30 -51.2144,40 -39.3254,22 -53.0436,60 -53.0436,154 0,33 -4.5727,91 -9.1453,130 -4.5727,38 -5.4873,73 -3.6582,77 2.7436,5 25.6071,-9 50.2998,-31 25.6073,-22 117.0616,-78 203.0287,-125 z"
           id="path169"
           sodipodi:nodetypes="cccccccccccccccccccscccc"
           style="fill:#188c00;fill-opacity:1;stroke-width:0.956318" /><path
           d="m 2804.735,11986.995 c 59,-29 101,-72 115,-120 19,-61 -7,-135 -67,-190 -80,-73 -155,-89 -229,-47 -52,29 -75,75 -75,151 0,105 54,181 152,211 57,18 55,18 104,-5 z"
           id="path167"
           style="fill:#178a00;fill-opacity:1" /><path
           d="m -1294.9312,11820.445 c 61,-32 86,-115 55,-189 -20,-49 -60,-76 -114,-76 -39,0 -50,5 -88,44 -36,36 -44,50 -44,81 0,41 22,95 49,119 10,9 38,20 62,25 24,5 45,9 47,10 2,1 16,-6 33,-14 z"
           id="path166"
           style="fill:#f6d732;fill-opacity:1" /><path
           id="path159"
           style="fill:#ee6120;fill-opacity:1"
           d="m 496.01236,13543.16 -118.0078,-123.999 c -65,-68.999 -203.9946,-204.007 -308.994198,-302.006 -105.9996,-97 -299.997802,-282.999 -431.997002,-412.998 -131.9996,-129 -271.9975,-264.001 -311.9971,-300 l -71.001,-64 0.9961,-499.995 c 1,-324.998 4.9971,-500.005 11.9971,-501.005 6,0 30.0088,-3.999 54.0088,-7.999 32.9996,-6 45.9873,-5.004 51.9873,4.996 7,11 9.0088,9.997 9.0088,-3.003 0,-14 7.998,-17.989 37.998,-17.989 27,0 33.0016,2.991 22.002,9.991 -11,7 -11.0069,10.004 -2.0069,10.004 7,0 10.9981,3.999 7.9981,7.999 -6,10 123.0117,35.997 132.0117,26.997 3,-3 -1.0127,-4.996 -8.0127,-4.996 -9,0 -6.9938,-7.005 6.0058,-21.005 17,-19 26.0079,-21 88.0079,-15 37.9996,4 102.9941,15.001 143.9941,26.001 42,11 87.001,20.009 101.001002,20.009 82.9996003,0 347.994498,53 473.994098,93.999 74.9996,25 186.0098,53.996 245.0098,64.996 93.9996,16.999 278.9877,78.001 351.9873,116 14,8 77.00984,37.995 140.00984,68.995 163.9992,78.999 278.9964,144.007 345.996,197.006 33,25 74.0069,54.003 92.0069,63.003 18,9 40.9912,30.993 50.9912,46.993 10,17 28.0049,37 40.0049,45 11,8 20.9912,22 20.9912,30 0,8 7,14.003 15,14.003 10,0 15,10 15,30 0,33 -13.9893,38.994 -28.9893,12.994 -10,-17 -10.0009,-16.996 -11.0009,-0.996 0,9 -7.0069,21.001 -17.0069,26.001 -21,12 -24.0019,51.006 -7.0019,77.006 24.9996,35 16.0015,51.991 -52.9981,99.991 -37.9996,26 -77.9961,59.996 -90.9961,75.996 -13,16 -29.0019,29.004 -37.0019,29.004 -7,0 -27.9922,16.998 -46.9922,37.998 -19,20 -58.001,58.005 -86.001,85.005 -64.9996,59.999 -39.0035,63.002 30.9961,3.002 29,-24 62.9922,-49.001 76.9922,-56.001 28,-15 106.0078,-100.001 103.0078,-112.001 -2,-4 1.9984,-7.999 7.998,-7.999 6,0 38.9971,-25.004 71.9971,-55.004 56,-50 97.002,-68.996 97.002,-45.996 0,4.999 11.0049,12 25.0049,15 13.9996,3.999 24.9902,10 24.9902,15 0,16.999 -529.991,522.998 -729.9902,697.998 -179.99964,156.999 -273.00404,242.995 -329.00404,304.995 -27.9996,31 -85.9941,88.006 -128.9941,126.006 z m -242.9883,-960.776 c 86.1976,0.559 201.6094,-6.914 213.9844,-17.227 12,-10 15,-36.999 15,-123.999 0,-60.999 -2.9912,-135.007 -5.9912,-163.007 l -7.002,-52.998 h -178.0078 c -207.999198,0 -184.0039,-17.999 -194.003898,146.001 -6,101.999 4.011698,176.004 27.011698,190.004 6,4 24.9971,11 41.9971,15 14.6875,4.063 47.8308,5.972 87.0117,6.226 z m 541.4795,-0.981 c 6.4277,-0.04 12.626,-0.124 18.501,-0.249 128.9994,-1 129.0088,-0.999 129.0088,-187.998 0,-145 -1.002,-149.002 -22.002,-157.002 -13,-4 -93.0042,-11.004 -179.0039,-14.004 -154.9997,-6 -156.9932,-5.99 -162.9932,16.01 -12,44 -6.998,301.996 7.002,319.996 8,11 31.9922,16.995 76.9922,19.995 31.4997,1.75 87.501,3.511 132.4951,3.252 z m -508.2422,-474.493 c 87.4998,0.25 176.2422,-5.257 185.7422,-16.757 17,-21 10.0019,-319.002 -7.9981,-337.002 -9,-9 -57.0011,-13.996 -146.0009,-15.996 -147.9998,-4 -188.001,5.994 -206.001,53.994 -11,28 -13.998998,273.008 -3.999,298.008 4.5,11.499 90.757,17.503 178.2568,17.753 z m 305.7422,-1.757 h 160.0049 c 91.9999,0 169.9961,-3.991 180.9961,-9.991 16.9999,-10 18.999,-22.005 18.999,-145.005 0,-72.999 -3.9903,-145.004 -9.9902,-160.004 -17,-44 -58.0022,-52.993 -217.002,-46.993 -133.9999,4 -141.9971,6.001 -146.9971,26.001 -10,36 -7.0009,282.991 3.9991,309.991 z" /><path
           d="m 2581.4693,14209.495 c 57,-29 84,-56 111,-113 76,-161 -40,-336 -220,-334 -149,1 -259,98 -259,229 -1,46 6,67 38,124 42,75 62,89 165,112 65,15 110,10 165,-18 z"
           id="path158"
           style="fill:#ffe700;fill-opacity:1" /><path
           d="m 722.01076,13570.155 c 7,-8 17,-15 23,-15 20,0 96,-65 92,-78 -3,-7 0,-10 5,-7 6,4 36,-14 68,-39 155.00004,-124 186.00004,-148 215.00004,-163 18,-9 55,-38 82,-65 50,-49 153,-108 186,-108 40,0 52,43 57,200 3,97 9,150 16,153 6,2 78,2 160,-1 l 148,-5 -6,-381 c -6,-376 -8,-436 -14,-436 -2,0 -67,59 -145,132 -78,72 -203,183 -277,247 -74,64 -146,126 -160,137 -14,12 -79,69 -146,125 -161.00004,138 -342.00004,302 -343.00004,312 -2,13 26,7 39,-8 z"
           id="path157"
           style="fill-rule:nonzero" /><path
           d="m -847.93784,13829.554 c 26,-17 58,-44 72,-60 26,-31 55,-115 55,-158 0,-70 -94,-180 -172,-201 -77,-21 -199.99996,21 -252.99996,87 -25,32 -30,49 -33,105 -4,56 -1,73 17,100 11,18 21,29 21,23 0,-15 40,53 40,68 0,18 40,54 65,60 11,3 46.99996,5 80.99996,6 52,1 67,-3 107,-30 z"
           id="path156"
           style="fill:#0baa00;fill-opacity:1" /><path
           d="m 550.01076,13720.155 c 41,-18 82,-52 82,-70 0,-6 9,-19 21,-28 11,-10 18,-21 15,-24 -3,-4 -19,5 -34,18 -15,14 -53,45 -85,68 l -57,43 -57,-46 c -31,-26 -140,-127 -242,-224 -359,-343 -418,-398 -590,-557 -95,-88 -176,-165 -180,-172 -14,-25 -300,-309 -328,-325 -18,-10 -34,-14 -43,-8 -11,7 -9,16 12,47 39,57 774,793 843.000002,843 101.0000003,74 229.999998,187 337.999998,295 117,117 143,136 201,146 63,10 64,10 104,-6 z"
           id="path155" /><path
           d="m 597.01076,14073.155 c 323,-297 535.00004,-472 551.00004,-455 10,10 23,87 24,137 v 45 l 457,-3 458,-3 6,-237 c 4,-130 7,-363 8,-517 l 1,-281 133,-125 c 151,-144 178,-163 207,-154 19,6 20,2 20,-78 0,-100 20,-212 49,-280 23,-53 27,-87 10,-87 -5,0 -40,4 -77,9 -37,5 -121,12 -187,15 l -120,6 v -173 c 0,-94 -3,-184 -7,-199 -8,-25 -12,-27 -79,-30 -52,-2 -73,1 -76,10 -10,24 3,522 13,532 6,6 66,7 172,2 l 162,-7 v 55 c -1,74 -15,101 -81,152 -64,49 -217,186 -266,237 l -33,35 v 473 473 h -284 c -156,0 -298,3 -315,6 l -31,7 -1,-129 c 0,-127 -9,-218 -23,-231 -3,-4 -40,28 -82,70 -41,42 -108,101 -147,131 -40,30 -130.00004,103 -201.00004,163 -71,59 -154,129 -185,154 -31,26 -85,74 -120,108 -35,33 -67,61 -71,61 -16,0 -234,-191 -449.999998,-395 -124,-116 -423.000002,-407 -665.000002,-646 -243,-239 -490.99996,-478 -551.99996,-532 -116,-102 -143,-133 -143,-165 0,-17 5,-18 58,-10 31,4 121,7 200,6 134.99996,-1 142.99996,-3 147.99996,-22 2,-12 3,-203 2,-426 -3,-353 -5,-405 -18,-403 -45,7 -114.99996,24 -120.99996,31 -4,4 -9,152 -11,330 -2,222 -6,321 -14,318 -13,-5 -437,11 -514,20 -51,6 -59,10 -65,31 -3,13 -1,41 5,63 8,31 20,45 63,71 28,17 126,104 217,193 91,88 273,264 404.99996,391 132,126 357,344 500,485 395.000002,389 918,870 944,870 9,0 66,-46 126,-102 z"
           id="path154" /></g></g></g><script
     id="mesh_polyfill"
     type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script></svg>
